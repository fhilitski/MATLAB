function [fitresult, gof] = LorentzianFitWeighted(fit_freq, normalized_fit_power, result_weight)
%CREATEFIT(FIT_FREQ,NORMALIZED_FIT_POWER,RESULT_WEIGHT)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : fit_freq
%      Y Output: normalized_fit_power
%      Weights : result_weight
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 18-Dec-2013 18:07:41


%% Fit: 'untitled fit 1'.
[xData, yData, weights] = prepareCurveData( fit_freq, normalized_fit_power, result_weight );

% Set up fittype and options.
ft = fittype( 'a/(1+(b*x)^2)', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( ft );
opts.Display = 'Off';
opts.Lower = [0 0];
opts.MaxFunEvals = 1000;
opts.MaxIter = 1000;
opts.StartPoint = [0 0.001];
opts.Upper = [Inf Inf];
opts.Weights = weights;

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 1' );
h = plot( fitresult, xData, yData );
legend( h, 'normalized_fit_power vs. fit_freq with result_weight', 'untitled fit 1', 'Location', 'NorthEast' );
% Label axes
xlabel( 'fit_freq' );
ylabel( 'normalized_fit_power' );
grid on


